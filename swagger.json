{
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Houseduino Api:",
    "version": "0.1.1"
  },
  "paths": {
    "/activity/all": {
      "get": {
        "description": "Get Activity list",
        "tags": [
          "activity"
        ],
        "operationId": "activityAll",
        "responses": {
          "200": {
            "description": "GetActivities",
            "schema": {
              "$ref": "#/definitions/GetActivities"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/activity/insert": {
      "post": {
        "description": "Create a new Activity value",
        "tags": [
          "activity"
        ],
        "operationId": "activityPOST",
        "parameters": [
          {
            "description": "example parameters",
            "name": "request",
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetActivity",
            "schema": {
              "$ref": "#/definitions/GetActivity"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/activity/isactive": {
      "get": {
        "description": "Get if sensor is online or offline",
        "tags": [
          "activity"
        ],
        "operationId": "activityIsActive",
        "responses": {
          "200": {
            "description": "GetIsActive",
            "schema": {
              "$ref": "#/definitions/GetIsActive"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/activity/lasthour": {
      "get": {
        "description": "Get list of last hour of Activity .... or the last value inserted",
        "tags": [
          "activity"
        ],
        "operationId": "activityLasthour",
        "responses": {
          "200": {
            "description": "GetActivities",
            "schema": {
              "$ref": "#/definitions/GetActivities"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/altitude/all": {
      "get": {
        "description": "Get Altitude list",
        "tags": [
          "altitude"
        ],
        "operationId": "altitudeAll",
        "responses": {
          "200": {
            "description": "GetAltitudes",
            "schema": {
              "$ref": "#/definitions/GetAltitudes"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/altitude/insert": {
      "post": {
        "description": "Create a new altitude value",
        "tags": [
          "altitude"
        ],
        "operationId": "altitudePost",
        "responses": {
          "200": {
            "description": "GetAltitude",
            "schema": {
              "$ref": "#/definitions/GetAltitude"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/altitude/lasthour": {
      "get": {
        "description": "Get list of last hour of altitude values .... or the last value inserted",
        "tags": [
          "altitude"
        ],
        "operationId": "altitudeLastHour",
        "responses": {
          "200": {
            "description": "GetAltitudes",
            "schema": {
              "$ref": "#/definitions/GetAltitudes"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/altitude/showdata/{recordNumber}": {
      "get": {
        "description": "Get list of recordNumber of altitude values",
        "tags": [
          "altitude"
        ],
        "operationId": "altitudeShowdata",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "maximum numnber of results to return",
            "name": "recordNumber",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetAltitudes",
            "schema": {
              "$ref": "#/definitions/GetAltitudes"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/humidity/all": {
      "get": {
        "description": "Get humidity list",
        "tags": [
          "humidity"
        ],
        "operationId": "humidityAll",
        "responses": {
          "200": {
            "description": "GetHumidities",
            "schema": {
              "$ref": "#/definitions/GetHumidities"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/humidity/insert": {
      "post": {
        "description": "Create a new humidity value",
        "tags": [
          "humidity"
        ],
        "operationId": "humidityPost",
        "responses": {
          "200": {
            "description": "GetHumidity",
            "schema": {
              "$ref": "#/definitions/GetHumidity"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/humidity/lasthour": {
      "get": {
        "description": "Get list of last hour of humidity values .... or the last value inserted",
        "tags": [
          "humidity"
        ],
        "operationId": "humiditylastHour",
        "responses": {
          "200": {
            "description": "GetHumidities",
            "schema": {
              "$ref": "#/definitions/GetHumidities"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/humidity/showdata/{recordNumber}": {
      "get": {
        "description": "Get list of recordNumber of humidity values",
        "tags": [
          "humidity"
        ],
        "operationId": "humidityShowdata",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "maximum numnber of results to return",
            "name": "recordNumber",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetHumidities",
            "schema": {
              "$ref": "#/definitions/GetHumidities"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/message/insert": {
      "post": {
        "description": "Create a new Message value",
        "tags": [
          "message"
        ],
        "operationId": "messagePost",
        "responses": {
          "200": {
            "description": "GetMessage",
            "schema": {
              "$ref": "#/definitions/GetMessage"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/message/lasthour": {
      "get": {
        "description": "Get list of last hour of Messages .... or the last value inserted",
        "tags": [
          "message"
        ],
        "operationId": "messageLastHour",
        "responses": {
          "200": {
            "description": "GetMessages",
            "schema": {
              "$ref": "#/definitions/GetMessages"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/pressure/all": {
      "get": {
        "description": "Get Pressure list",
        "tags": [
          "pressure"
        ],
        "operationId": "pressureAll",
        "responses": {
          "200": {
            "description": "GetPressures",
            "schema": {
              "$ref": "#/definitions/GetPressures"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/pressure/insert": {
      "post": {
        "description": "Create a new pressure value",
        "tags": [
          "pressure"
        ],
        "operationId": "pressurePost",
        "responses": {
          "200": {
            "description": "GetPressure",
            "schema": {
              "$ref": "#/definitions/GetPressure"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/pressure/lasthour": {
      "get": {
        "description": "Get list of last hour of pressure values .... or the last value inserted",
        "tags": [
          "pressure"
        ],
        "operationId": "pressureLastHour",
        "responses": {
          "200": {
            "description": "GetPressures",
            "schema": {
              "$ref": "#/definitions/GetPressures"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/pressure/showdata/{recordNumber}": {
      "get": {
        "description": "Get list of recordNumber of pressure values",
        "tags": [
          "pressure"
        ],
        "operationId": "pressureShowdata",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "maximum numnber of results to return",
            "name": "recordNumber",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetPressures",
            "schema": {
              "$ref": "#/definitions/GetPressures"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/rain/all": {
      "get": {
        "description": "Get rains list",
        "tags": [
          "rain"
        ],
        "operationId": "rainAll",
        "responses": {
          "200": {
            "description": "GetRains",
            "schema": {
              "$ref": "#/definitions/GetRains"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/rain/insert": {
      "post": {
        "description": "Create a new rain value",
        "tags": [
          "rain"
        ],
        "operationId": "rainPost",
        "responses": {
          "200": {
            "description": "GetRain",
            "schema": {
              "$ref": "#/definitions/GetRain"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/rain/lasthour": {
      "get": {
        "description": "Get list of last hour of rain .... or the last value inserted",
        "tags": [
          "rain"
        ],
        "operationId": "rainLastHour",
        "responses": {
          "200": {
            "description": "GetRains",
            "schema": {
              "$ref": "#/definitions/GetRains"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/rain/showdata/{recordNumber}": {
      "get": {
        "description": "Get list of recordNumber of rain values",
        "tags": [
          "rain"
        ],
        "operationId": "rainShowdata",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "maximum numnber of results to return",
            "name": "recordNumber",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetRains",
            "schema": {
              "$ref": "#/definitions/GetRains"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/temperature/all": {
      "get": {
        "description": "Get Temperature list",
        "tags": [
          "temperature"
        ],
        "operationId": "temperatureAll",
        "responses": {
          "200": {
            "description": "GetTemperatures",
            "schema": {
              "$ref": "#/definitions/GetTemperatures"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/temperature/insert": {
      "post": {
        "description": "Create a new temperature value",
        "tags": [
          "temperature"
        ],
        "operationId": "temperaturePost",
        "responses": {
          "200": {
            "description": "GetTemperature",
            "schema": {
              "$ref": "#/definitions/GetTemperature"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/temperature/lasthour": {
      "get": {
        "description": "Get list of last hour of temperature values .... or the last value inserted",
        "tags": [
          "temperature"
        ],
        "operationId": "temperatureLastHour",
        "responses": {
          "200": {
            "description": "GetTemperatures",
            "schema": {
              "$ref": "#/definitions/GetTemperatures"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    },
    "/temperature/showdata/{recordNumber}": {
      "get": {
        "description": "Get list of recordNumber of temperature values",
        "tags": [
          "temperature"
        ],
        "operationId": "temperatureShowdata",
        "parameters": [
          {
            "type": "integer",
            "format": "int32",
            "description": "maximum numnber of results to return",
            "name": "recordNumber",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "GetTemperatures",
            "schema": {
              "$ref": "#/definitions/GetTemperatures"
            }
          },
          "401": {
            "description": "CommonError",
            "schema": {
              "$ref": "#/definitions/CommonError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Activities": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Activity"
      },
      "x-go-package": "houseduino-be/models"
    },
    "Activity": {
      "type": "object",
      "properties": {
        "data_inserimento": {
          "description": "Timestamp of insert\nin: time",
          "type": "string",
          "format": "date-time",
          "x-go-name": "DateInsert"
        },
        "id": {
          "description": "Id of Activity value\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Id"
        },
        "valore": {
          "description": "Value of Activity\nin: int",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "houseduino-be/models"
    },
    "Altitude": {
      "type": "object",
      "properties": {
        "data_inserimento": {
          "description": "Timestamp of insert\nin: time",
          "type": "string",
          "format": "date-time",
          "x-go-name": "DateInsert"
        },
        "id": {
          "description": "Id of rain value\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Id"
        },
        "valore": {
          "description": "Value of Altitude\nin: int",
          "type": "number",
          "format": "float",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "houseduino-be/models"
    },
    "Altitudes": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Altitude"
      },
      "x-go-package": "houseduino-be/models"
    },
    "CommonError": {
      "type": "object",
      "properties": {
        "message": {
          "description": "Message of the error\nin: string",
          "type": "string",
          "x-go-name": "Message"
        },
        "status": {
          "description": "Status of the error\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "houseduino-be/controllers"
    },
    "CommonSuccess": {
      "type": "object",
      "properties": {
        "message": {
          "description": "Message of the error\nin: string",
          "type": "string",
          "x-go-name": "Message"
        },
        "status": {
          "description": "Status of the error\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "houseduino-be/controllers"
    },
    "GetActivities": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Activities"
        },
        "message": {
          "description": "Message of the response\nin: string",
          "type": "string",
          "x-go-name": "Message"
        },
        "status": {
          "description": "Status of the error\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "houseduino-be/controllers"
    },
    "GetActivity": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Activity"
        },
        "message": {
          "description": "Message of the response\nin: string",
          "type": "string",
          "x-go-name": "Message"
        },
        "status": {
          "description": "Status of the error\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "houseduino-be/controllers"
    },
    "GetAltitude": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Altitude"
        },
        "message": {
          "description": "Message of the response\nin: string",
          "type": "string",
          "x-go-name": "Message"
        },
        "status": {
          "description": "Status of the error\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "houseduino-be/controllers"
    },
    "GetAltitudes": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Altitudes"
        },
        "message": {
          "description": "Message of the response\nin: string",
          "type": "string",
          "x-go-name": "Message"
        },
        "status": {
          "description": "Status of the error\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "houseduino-be/controllers"
    },
    "GetHumidities": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Humidities"
        },
        "message": {
          "description": "Message of the response\nin: string",
          "type": "string",
          "x-go-name": "Message"
        },
        "status": {
          "description": "Status of the error\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "houseduino-be/controllers"
    },
    "GetHumidity": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Humidity"
        },
        "message": {
          "description": "Message of the response\nin: string",
          "type": "string",
          "x-go-name": "Message"
        },
        "status": {
          "description": "Status of the error\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "houseduino-be/controllers"
    },
    "GetIsActive": {
      "type": "object",
      "properties": {
        "active": {
          "description": "Message of the response\nin: string",
          "type": "boolean",
          "x-go-name": "Active"
        },
        "status": {
          "description": "Status of the error\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "houseduino-be/controllers"
    },
    "GetMessage": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Message"
        },
        "message": {
          "description": "Message of the response\nin: string",
          "type": "string",
          "x-go-name": "Message"
        },
        "status": {
          "description": "Status of the error\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "houseduino-be/controllers"
    },
    "GetMessages": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Messages"
        },
        "message": {
          "description": "Message of the response\nin: string",
          "type": "string",
          "x-go-name": "Message"
        },
        "status": {
          "description": "Status of the error\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "houseduino-be/controllers"
    },
    "GetPressure": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Pressure"
        },
        "message": {
          "description": "Message of the response\nin: string",
          "type": "string",
          "x-go-name": "Message"
        },
        "status": {
          "description": "Status of the error\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "houseduino-be/controllers"
    },
    "GetPressures": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Pressures"
        },
        "message": {
          "description": "Message of the response\nin: string",
          "type": "string",
          "x-go-name": "Message"
        },
        "status": {
          "description": "Status of the error\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "houseduino-be/controllers"
    },
    "GetRain": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Rain"
        },
        "message": {
          "description": "Message of the response\nin: string",
          "type": "string",
          "x-go-name": "Message"
        },
        "status": {
          "description": "Status of the error\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "houseduino-be/controllers"
    },
    "GetRains": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Rains"
        },
        "message": {
          "description": "Message of the response\nin: string",
          "type": "string",
          "x-go-name": "Message"
        },
        "status": {
          "description": "Status of the error\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "houseduino-be/controllers"
    },
    "GetTemperature": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Temperature"
        },
        "message": {
          "description": "Message of the response\nin: string",
          "type": "string",
          "x-go-name": "Message"
        },
        "status": {
          "description": "Status of the error\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "houseduino-be/controllers"
    },
    "GetTemperatures": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/Temperatures"
        },
        "message": {
          "description": "Message of the response\nin: string",
          "type": "string",
          "x-go-name": "Message"
        },
        "status": {
          "description": "Status of the error\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "houseduino-be/controllers"
    },
    "Humidities": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Humidity"
      },
      "x-go-package": "houseduino-be/models"
    },
    "Humidity": {
      "type": "object",
      "properties": {
        "data_inserimento": {
          "description": "Timestamp of insert\nin: time",
          "type": "string",
          "format": "date-time",
          "x-go-name": "DateInsert"
        },
        "id": {
          "description": "Id of rain value\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Id"
        },
        "valore": {
          "description": "Value of Humidity\nin: int",
          "type": "number",
          "format": "float",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "houseduino-be/models"
    },
    "Message": {
      "type": "object",
      "properties": {
        "data_inserimento": {
          "description": "Timestamp of insert\nin: time",
          "type": "string",
          "format": "date-time",
          "x-go-name": "DateInsert"
        },
        "id": {
          "description": "Id of Message value\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Id"
        },
        "messaggio": {
          "description": "Value of Message\nin: int",
          "type": "string",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "houseduino-be/models"
    },
    "Messages": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Message"
      },
      "x-go-package": "houseduino-be/models"
    },
    "Pressure": {
      "type": "object",
      "properties": {
        "data_inserimento": {
          "description": "Timestamp of insert\nin: time",
          "type": "string",
          "format": "date-time",
          "x-go-name": "DateInsert"
        },
        "id": {
          "description": "Id of Pressure value\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Id"
        },
        "valore": {
          "description": "Value of Pressure\nin: float",
          "type": "number",
          "format": "float",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "houseduino-be/models"
    },
    "Pressures": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Pressure"
      },
      "x-go-package": "houseduino-be/models"
    },
    "Rain": {
      "type": "object",
      "properties": {
        "data_inserimento": {
          "description": "Timestamp of insert\nin: time",
          "type": "string",
          "format": "date-time",
          "x-go-name": "DateInsert"
        },
        "id": {
          "description": "Id of rain value\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Id"
        },
        "valore": {
          "description": "Value of rain\nin: int",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "houseduino-be/models"
    },
    "Rains": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Rain"
      },
      "x-go-package": "houseduino-be/models"
    },
    "ReqAddActivity": {
      "type": "object",
      "properties": {
        "valore": {
          "description": "Value of the Activity\nin: int",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "houseduino-be/models"
    },
    "ReqAddAltitude": {
      "type": "object",
      "properties": {
        "valore": {
          "description": "Value of the Altitude\nin: int",
          "type": "number",
          "format": "float",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "houseduino-be/models"
    },
    "ReqAddHumidity": {
      "type": "object",
      "properties": {
        "valore": {
          "description": "Value of the Humidity\nin: int",
          "type": "number",
          "format": "float",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "houseduino-be/models"
    },
    "ReqAddPressure": {
      "type": "object",
      "properties": {
        "valore": {
          "description": "Value of the Pressure\nin: float",
          "type": "number",
          "format": "float",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "houseduino-be/models"
    },
    "ReqAddRain": {
      "type": "object",
      "properties": {
        "valore": {
          "description": "Value of the rain\nin: int",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "houseduino-be/models"
    },
    "ReqAddTemperature": {
      "type": "object",
      "properties": {
        "valore": {
          "description": "Value of the Temperature\nin: float",
          "type": "number",
          "format": "float",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "houseduino-be/models"
    },
    "Temperature": {
      "type": "object",
      "properties": {
        "data_inserimento": {
          "description": "Timestamp of insert\nin: time",
          "type": "string",
          "format": "date-time",
          "x-go-name": "DateInsert"
        },
        "id": {
          "description": "Id of Temperature value\nin: int64",
          "type": "integer",
          "format": "int64",
          "x-go-name": "Id"
        },
        "valore": {
          "description": "Value of Temperature\nin: float",
          "type": "number",
          "format": "float",
          "x-go-name": "Value"
        }
      },
      "x-go-package": "houseduino-be/models"
    },
    "Temperatures": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Temperature"
      },
      "x-go-package": "houseduino-be/models"
    }
  }
}